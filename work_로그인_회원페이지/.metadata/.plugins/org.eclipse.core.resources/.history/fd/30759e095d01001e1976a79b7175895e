package com.pj.photo;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import dao.ProMemberDAO;
import dao.ProPhotoDAO;
import path.MyCommon;
import vo.ProMemberVO;

@Controller
public class MemberController {
	
	@Autowired
	HttpSession session;
	
	ProMemberDAO proMember_dao;
	
	ProPhotoDAO proPhoto_dao;
	
	public MemberController(ProMemberDAO proMember_dao, ProPhotoDAO proPhoto_dao) {
		this.proMember_dao = proMember_dao;
		this.proPhoto_dao = proPhoto_dao;
	}
	
	@RequestMapping(value= {"/","main"})
	public String mainpage() {
		
		return MyCommon.PATH + "main.jsp";
	}
	
	@RequestMapping("disney")
	public String disney() {
		
		return MyCommon.PATH + "disney.jsp";
	}
	
	@RequestMapping("faq")
	public String faq() {
		
		return MyCommon.PATH + "faq.jsp";
	}
	
	@RequestMapping("test")
	public String test() {
		
		return MyCommon.PATH + "test.jsp";
	}
 
	
	@RequestMapping("check_nickname")
	@ResponseBody
	// 중복이 안되면 yes, 중복이 되면 no라는 문자열 보내기
	public String check_nickname(String nickname) {
		
		int res = proMember_dao.check_nickname(nickname);
		
		if (res > 0) {
			
			return "[{'result':'no'}]";
			
		}
		
		return "[{'result':'yes'}]";
	}
				
	
	@RequestMapping("member_insert")
	public String member_insert(ProMemberVO vo) {
		
		int res = proMember_dao.insert(vo);
		
		if (res > 0) {
			
			return "redirect:test";
		}
		
		return null;
	}
	
	// 로그인
	@RequestMapping("login.do")
	@ResponseBody
	public String login(String email, String pw) {
		
		ProMemberVO vo = proMember_dao.loginCheck(email);
		
		// 아이디가 존재하지 않는 경우
		if(vo == null) {
			
			return "[{'result':'no_email'}]";
		}
		
		// 비밀번호가 일치하지 않는 경우
		if(!vo.getPw().equals(pw)) {
			
			return "[{'result':'no_pw'}]";
		}
		
		// 세션 유지
		session.setAttribute("email", vo);
		
		return "[{'result':'clear'}]";
	}
	
	// 로그아웃
	@RequestMapping("logout.do")
	public String logout() {
		
		session.removeAttribute("email");
		
		// 세션에 들어있는 모든 속성을 제거한다
		// session.invalidate();
		
		return "redirect:main";
	}

}
